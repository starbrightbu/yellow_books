# -*- coding: utf-8 -*-

# lib_name / lib_code
# 노원중앙도서관 111058
# 서울특별시교육청노원평생학습관 111022
# 월계도서관 111085
# 불암도서관 111485
# 노원어린이도서관 111047
# 상계도서관 111307
# 화랑도서관 111239
# 하계어린이도서관 111519
# 월계어린이도서관 111484

import pandas as pd
import requests

# 도서관 정보나루 > 데이터 제공 > 인기대출도서 : 60대 이상, 2023-01-01 ~ 2023-12-31, 상위 100권
df = pd.read_csv('steady_60_100.csv')

# ISBN 목록 가져오기
isbn_list = df['ISBN'].tolist()


"""# 노원중앙도서관	111058"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_nwcentral = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=096482a843c0d25e3fb367cc0844f1fe57b320ddb575965e002c3ef13996e585&libCode=111058&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_nwcentral.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
matched_isbn_nwcentral = pd.DataFrame(matched_isbn_nwcentral, columns=['Matched ISBN'])

# 결과 출력
print(matched_isbn_nwcentral)

matched_isbn_nwcentral.to_csv('matched_isbn_nwcentral.csv', index=False)



"""# 서울특별시교육청노원평생학습관	111022"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_edu = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=6276ceb02a32ee5ba07e9956479cd1a9f77882bbcdb942199ef6d937ea82dca1&libCode=111022&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_edu.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_edu = pd.DataFrame(matched_isbn_edu, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_edu)

df_matched_edu.to_csv('matched_isbn_edu.csv', index=False)



"""# 월계도서관	111085"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_moon = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=6276ceb02a32ee5ba07e9956479cd1a9f77882bbcdb942199ef6d937ea82dca1&libCode=111085&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_moon.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_moon = pd.DataFrame(matched_isbn_moon, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_moon)

df_matched_moon.to_csv('matched_isbn_moon.csv', index=False)



"""# 불암도서관	111485"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_fire = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=6276ceb02a32ee5ba07e9956479cd1a9f77882bbcdb942199ef6d937ea82dca1&libCode=111485&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_fire.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_fire = pd.DataFrame(matched_isbn_fire, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_fire)

df_matched_fire.to_csv('matched_isbn_fire.csv', index=False)



"""# 노원어린이도서관	111047"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_nwch = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=096482a843c0d25e3fb367cc0844f1fe57b320ddb575965e002c3ef13996e585&libCode=111047&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_nwch.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_nwch = pd.DataFrame(matched_isbn_nwch, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_nwch)

df_matched_nwch.to_csv('matched_isbn_nwch.csv', index=False)



"""# 상계도서관	111307"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_up = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=cf01b6640d6bdcac179ecb8cff8562dd9a33b737f6f3c3b8b874b218a571592b&libCode=111307&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_up.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_up = pd.DataFrame(matched_isbn_up, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_up)

df_matched_up.to_csv('matched_isbn_up.csv', index=False)



"""# 화랑도서관	111239"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_hwa = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=cf01b6640d6bdcac179ecb8cff8562dd9a33b737f6f3c3b8b874b218a571592b&libCode=111239&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_hwa.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_hwa = pd.DataFrame(matched_isbn_hwa, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_hwa)

df_matched_hwa.to_csv('matched_isbn_hwa.csv', index=False)



"""# 하계어린이도서관	111519"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_downch = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=cf01b6640d6bdcac179ecb8cff8562dd9a33b737f6f3c3b8b874b218a571592b&libCode=111519&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_downch.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_downch = pd.DataFrame(matched_isbn_downch, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_downch)

df_matched_downch.to_csv('matched_isbn_downch.csv', index=False)



"""# 월계어린이도서관	111484"""

# 조건에 맞는 ISBN을 저장할 리스트
matched_isbn_moonch = []

# API 호출 및 일치하는 ISBN 찾기
for isbn in isbn_list:
    # API URL 설정
    url = f"https://data4library.kr/api/itemSrch?authKey=cf01b6640d6bdcac179ecb8cff8562dd9a33b737f6f3c3b8b874b218a571592b&libCode=111484&type=ALL&format=json&isbn13={isbn}"

    # API 요청
    response = requests.get(url)

    # 응답이 성공적일 경우
    if response.status_code == 200:
        data = response.json()

        # JSON 데이터에서 numFound 값을 확인
        if 'response' in data and 'numFound' in data['response']:
            if data['response']['numFound'] != 0:
                matched_isbn_moonch.append(isbn)  # numFound가 0이 아니면 리스트에 추가

# 일치하는 ISBN을 데이터프레임에 추가
df_matched_moonch = pd.DataFrame(matched_isbn_moonch, columns=['Matched ISBN'])

# 결과 출력
print(df_matched_moonch)

df_matched_moonch.to_csv('matched_isbn_moonch.csv', index=False)


## 분석 결과 (도서관 별 60대 이상 스테디 대출 도서 상위 100권 보유 현황)
#
# 노원중앙도서관	111058 nwcentral 98권 
# 서울특별시교육청노원평생학습관	111022 edu 98권
# 월계도서관	111085 moon 86권
# 불암도서관	111485 fire 94권
# 노원어린이도서관	111047 nwch X
# 상계도서관	111307 up 96권
# 화랑도서관	111239 hwa 83권
# 하계어린이도서관	111519 downch X 
# 월계어린이도서관	111484 moonch X


